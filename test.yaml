---
- name: Deploy Application on OpenShift using S2I
  hosts: localhost
  gather_facts: false

  vars:
    app_name: judge-bottle
    app_namespace: judge
    git_repo: git@github.com:catalyst-ctfd/catalyst.git
    git_subdirectory: /judge/bottle
    ssh_private_key: /ssh-key/ssh-key
    github_webhook_secret: "mysecret" # Replace with your GitHub webhook secret

  tasks:
    - name: Create namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ app_namespace }}"
        state: present

    - name: Create BuildConfig for S2I
      kubernetes.core.k8s:
        api_version: build.openshift.io/v1
        kind: BuildConfig
        namespace: "{{ app_namespace }}"
        name: "{{ app_name }}"
        state: present
        definition:
          spec:
            source:
              git:
                uri: "{{ git_repo }}"
                ref: master
                contextDir: "{{ git_subdirectory }}"
              type: Git
            strategy:
              sourceStrategy:
                from:
                  kind: ImageStreamTag
                  name: "python:3.8"
                incremental: true
            output:
              to:
                kind: ImageStreamTag
                name: "{{ app_name }}:latest"
            triggers:
              - type: GitHub
                github:
                  secret: "{{ github_webhook_secret }}"
              - type: ImageChange
              - type: ConfigChange

    - name: Create Deployment
      kubernetes.core.k8s:
        api_version: apps/v1
        kind: Deployment
        namespace: "{{ app_namespace }}"
        name: "{{ app_name }}"
        state: present
        definition:
          metadata:
            labels:
              app: "{{ app_name }}"
          spec:
            replicas: 1
            selector:
              matchLabels:
                app: "{{ app_name }}"
            template:
              metadata:
                labels:
                  app: "{{ app_name }}"
              spec:
                containers:
                  - name: "{{ app_name }}"
                    image: "{{ app_name }}:latest"
                    ports:
                      - containerPort: 8080 # Adjust as needed
