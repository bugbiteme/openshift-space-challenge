{
  "count": 15,
  "results": [
    {
      "id": 1,
      "name": "Write your name in the sand",
      "description": "Write your name in the sand.  This way, a search plane might see it and know you are there and come rescue you.\r\n\r\n## Objective:\r\nYour current name is PlayerX.   Please change it for your real name and also add your email address.  This will be important to have a chance to win prizes.\r\n\r\n## Specifications:\r\nIn the top right corner, click on \"Settings\"\r\nChange the User Name for your full name:  e.g.  John Smith\r\nChange the Email address:  e.g. jsmith@mycompany.com\r\n\r\n*(optionally) you can change your password.  That said, please note that only the GAME UI password will be changed.   The OpenShift console and your Gitea environment will keep the same username/password.*\r\n\r\nOnce completed, enter \"DONE\" in the flag section and click submit to receive your first point!\r\n",
      "max_attempts": 0,
      "value": 1,
      "category": "Warm Up",
      "type": "standard",
      "state": "visible",
      "requirements": null,
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 3,
      "name": "Kubernetes version",
      "description": "Log into the OCP console, and find the kubernetes version OpenShift is built on.\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 10,
      "category": "Warm Up",
      "type": "standard",
      "state": "visible",
      "requirements": null,
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 4,
      "name": "Hello World",
      "description": "Your gitea account includes a project called `node-starter`.  Deploy it in your OCP namespace.\r\n\r\nThere is no need to enter a flag.  This challenge will be judged automatically!  \r\n\r\nThe judge must be able to access your service at https://hello-playerX.apps.{{ cluster_url }}/ , where `X` is your player number.   The only correct response is `Hello World`.\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}\r\n* gitea: https://gitea-gitea.apps.{{ cluster_url }}\r\n* starters: https://gitea-gitea.apps.{{ cluster_url }}/starter\r\n",
      "max_attempts": 0,
      "value": 10,
      "category": "Warm Up",
      "type": "standard",
      "state": "visible",
      "requirements": null,
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 5,
      "name": "The French Connection",
      "description": "The service you deployed in the **Hello World** challenge must now say `Bonjour Monde` instead of `Hello World`.\r\n\r\nNo need to enter a flag.  This challenge will be judged automatically!\r\n\r\n* gitea: https://gitea-gitea.apps.{{ cluster_url }}\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 10,
      "category": "Warm Up",
      "type": "standard",
      "state": "visible",
      "requirements": null,
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 6,
      "name": "Morse Coding",
      "description": "As night falls on the island, you notice a series of intermittent flashing lights from a distant peak. The patterns seem deliberate, not random. Familiarity strikes - it's Morse code! Amidst the rhythmic pulses, there's a distinct pattern that captures your attention. You believe that within this luminous dance lies a hidden flag, a clue to your next challenge on the island. Your mission: create an API to decipher the beacon's message and find the hidden flag code.\r\n\r\n# Objective:\r\nDevelop an API service that can receive a Morse code message and extract the hidden flag.  Not all messages will contain the flag.  A pre-existing ConfigMap in your project called `morse-code` contains a csv file that maps ASCII characters to morse sequences of dots and dashes.\r\n\r\n# Specifications:\r\n**Endpoint:** POST /decode-morse\r\n\r\n**Input:**\r\n\r\nJSON body with a key named message containing the Morse code string.\r\nExample: { \"message\": \"... --- ... -.. . -.-. --- -.. . -.-. .... .- .-.. .-.. . -. --. .\" }\r\n\r\n**Functional Requirements:**\r\n\r\nThe service should be able to handle standard Morse code symbols: dots (.), dashes (-), spaces between letters, and slashes (/) denoting spaces between words.\r\nThe API should focus on extracting the flag pattern and decoding it.\r\nSubmit the flag below once you've received the flag message!\r\n\r\nThe morse code sender must be able to access your service at https://morse-playerX.apps.{{ cluster_url }}/decode-morse, where `X` is your player number.\r\n\r\n* gitea: https://gitea-gitea.apps.{{ cluster_url }}\r\n* starters: https://gitea-gitea.apps.{{ cluster_url }}/starter\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 50,
      "category": "Island APIs",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 7,
      "name": "Message in a Bottle",
      "description": "During your lonely walks along the island's beaches, you discover bottles frequently washing ashore, each carrying a cryptic message. Inside each bottle, you find not only a character but also a set of coordinates. An idea dawns upon you: by placing each character at its designated spot on a grid, a coherent message might just come into view. It's clear that these bottles aren't mere oceanic debris; they are signposts, possibly guiding you towards rescue or unraveling the island's mysteries. Your mission, should you accept: Retrieve these bottled messages, meticulously mark each character on the grid, and unveil the concealed message.\r\n\r\n# Objective:\r\nDevelop an API that receives floating bottles, extract the character and position information, and then render the message to reveal the hidden flag.\r\n\r\n# Specifications:\r\n**Endpoint:** POST /collect-bottles\r\n\r\n**Input:**\r\n\r\nJSON body containing a list of JSON objects, each containing: \r\n* `character`: A single non-space character in the bottle\r\n* `coordinates`: An object with two properties, `x` and `y`, representing the location on the grid where the character should be placed.\r\n\r\nExample input:\r\n```\r\n[\r\n  {\r\n    \"character\": \"H\",\r\n    \"coordinates\": {\r\n      \"x\": 0,\r\n      \"y\": 1\r\n    }\r\n  },\r\n  {\r\n    \"character\": \"$\",\r\n    \"coordinates\": {\r\n      \"x\": 12,\r\n      \"y\": 5\r\n    }\r\n  }\r\n]\r\n```\r\nNote that you don't know the dimensions of the grid, or the orientation of the message.\r\n\r\nOnce you have the flag text, enter it in the field below.\r\n\r\nYou will receive bottles at `https://bottles-playerX.apps.{{ cluster_url }}/collect-bottles`, where `X` is your player number.\r\n\r\n* gitea: https://gitea-gitea.apps.{{ cluster_url }}\r\n* starters: https://gitea-gitea.apps.{{ cluster_url }}/starter\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 50,
      "category": "Island APIs",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 8,
      "name": "Kubernetes-native Java",
      "description": "Log in the OpenShift console using your username/password.\r\n\r\nIn the top/left, make sure you are in the \"Developer\" view.    In this view, your first option in the left menu is \"+Add\".    This page helps you quickly build services from different sources.\r\n\r\nUnder \"Getting started resources\", you'll find a \"Create applications using samples\" section.  What language come first as the best way to run Kubernetes-native Java with low memory footprint and fast boot times for microservices and serverless applications.\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 15,
      "category": "Treasure Hunts",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 9,
      "name": "Your default StorageClass",
      "description": "Log in the OpenShift console using your username/password.\r\n\r\nIn the top/left, make sure you are in the \"Administrator\" view.    In this view, click on \"Storage\" in the left bar menu.  Then click on \"StorageClasses\".\r\n\r\nWhat is your current default storageclass?\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 15,
      "category": "Treasure Hunts",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 10,
      "name": "Monkey Business",
      "description": "Help! The island is crawling with chaos monkeys!  Ensure your \"hello\" service is running with multiple replicas for high availability!  You don't want to miss a chance to say Hi on this lonely island.\r\n\r\nNo need to enter a flag.  This challenge will be judged automatically!\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 30,
      "category": "SurvivalOps",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 11,
      "name": "Aloha!",
      "description": "While the island appears tropical, there are few other clues to help you identify your location.  Are you in Hawai'i?  Maybe \"aloha\" is the customary greeting on this island.\r\n\r\nAdd a second route to your \"Hello World\" service from the \"Warm Up\" level so that it reachable at https://hello-playerX.apps.{{ cluster_url }}/aloha\r\n\r\nNo need to enter a flag.  This challenge will be judged automatically!\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 30,
      "category": "SurvivalOps",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 12,
      "name": "Treasure Map",
      "description": "Jackpot!  There's a treasure map hidden in a ConfigMap!  It's base64 encoded, so be sure to decode it once you find it, and enter it in the box below.\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 15,
      "category": "Treasure Hunts",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 13,
      "name": "Data Discovery",
      "description": "While scouring the island for clues, you stumble upon an unexpected digital relic: the personal logs of past explorers!  They are, of course, stored in a ConfigMap, encrypted in the universal language of... SQL. Before you scoff and toss it aside, consider the knowledge hidden within. These explorers might've unraveled the island's secrets! Look for the `island-logs` ConfigMap.  To decode these entries, you'll need to resurrect a PostgreSQL database in your project namespace.\r\n\r\nThere is no need to enter a flag.  This challenge will be judged automatically!\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 15,
      "category": "SurvivalOps",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 15,
      "name": "Top Explorer",
      "description": "Interestingly, in addition to the personal logs, the SQL tables also include skill assessment scores for every explorer across a number of IT survival skills.\r\n\r\nWhat's the name of the explorer with the highest aggregate skills score?\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 15,
      "category": "SurvivalOps",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          13
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 16,
      "name": "Journal",
      "description": "It occurs to you that the personal logs of the explorers may provide a clue to escaping the island.  If the explorers left the island, then perhaps their last journal entry would suggest what they did to escape!\r\n\r\nWhat it the final journal entry for the most skilled explorer?\r\n\r\n* ocp: https://console-openshift-console.apps.{{ cluster_url }}",
      "max_attempts": 0,
      "value": 15,
      "category": "SurvivalOps",
      "type": "standard",
      "state": "visible",
      "requirements": {
        "prerequisites": [
          17
        ]
      },
      "connection_info": null,
      "next_id": null
    },
    {
      "id": 17,
      "name": "Unlock the island",
      "description": "Wait for the game master to provide a KEY to unlock the rest of the island.  \r\nEnter this key in the flag section and click submit.\r\n\r\n",
      "max_attempts": 0,
      "value": 11,
      "category": "Warm Up",
      "type": "standard",
      "state": "visible",
      "requirements": null,
      "connection_info": null,
      "next_id": null
    }
  ],
  "meta": {}
}
