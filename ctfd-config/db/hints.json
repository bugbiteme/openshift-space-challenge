{"count":6,"results":[{"id":3,"type":"standard","challenge_id":3,"content":"Click on the \"?\" at the top right corner of the console.","cost":1,"requirements":{"prerequisites":[]}},{"id":4,"type":"standard","challenge_id":15,"content":"You'll need to get your data into the database.  One simple way in this environment is to attach the ConfigMap to the postgres DeploymentConfig as an environment variable.  Desparate times call for desparate measures!\n\nOnce visible as an environment variable, you can access the postgres pod terminal in the OCP web UI to examine and load the data with psql.","cost":3,"requirements":{"prerequisites":[]}},{"id":5,"type":"standard","challenge_id":15,"content":"Running...\n`$ psql -f file.sql`\n...will load the contents of `file.sql` into a local postgres instance.\n\nThe `psql` command will also give you a postgres shell for running queries.","cost":3,"requirements":{"prerequisites":[4]}},{"id":6,"type":"standard","challenge_id":15,"content":"    SELECT explorer_id, AVG(score)  \n    FROM skill_assessment \n    GROUP BY explorer_id","cost":5,"requirements":{"prerequisites":[4,5]}},{"id":7,"type":"standard","challenge_id":6,"content":"To get started, it makes sense to deploy an application with a `/decode-morse` endpoint that simply prints the incoming messages.\n\nYou don't necessarily need a whole new application.  You can add this capability to your `Hello World` service -- but make sure the Route matches what is expected.","cost":5,"requirements":{"prerequisites":[]}},{"id":8,"type":"standard","challenge_id":21,"content":"To calculate the distance between two islands, imagine that they represent two corners of a right-angle triangle, and use the [Pythagorean theorem](https://en.wikipedia.org/wiki/Pythagorean_theorem).","cost":10,"requirements":{"prerequisites":[]}}],"meta":{}}